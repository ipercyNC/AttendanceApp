{"version":3,"sources":["components/Student.js","services/students.js","components/Notification.js","App.js","index.js"],"names":["Student","student","toggleTransport","transportType","transport","className","name","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","props","useState","students","setStudents","newStudent","setNewStudent","showCars","setShowCars","showBusses","setShowBusses","successMessage","setSuccessMessage","useEffect","console","log","studentService","initialStudents","catch","error","length","studentsToShow","filter","map","find","s","changedStudent","returnedStudent","alert","toggleTransportType","onSubmit","event","preventDefault","studentObject","Math","random","concat","setTimeout","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76a00699.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Student = ({ student, toggleTransport }) => {\r\n    const transportType = student.transport === 'Car'? 'Change to Bus': 'Change to Car' \r\n    return (\r\n        <li className='student'>\r\n            <p>  \r\n                Name: {student.name} <br/>\r\n                Transport Type: {student.transport} \r\n                <button onClick={toggleTransport}>{transportType}</button>\r\n            </p>\r\n          </li>\r\n\r\n    );\r\n};\r\n\r\nexport default Student;","import axios from 'axios';\r\nconst baseUrl = '/api/students';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response=> response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response=> response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data);\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n};","import React from 'react';\r\nconst Notification = ({message}) => {\r\n    if(message === null) return null;\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React, {useState, useEffect} from 'react';\nimport Student from './components/Student';\nimport studentService from './services/students';\nimport Notification from './components/Notification';\nconst App = (props) => {\n  const [students,setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState('Add Student...');\n  const [showCars, setShowCars] = useState(false);\n  const [showBusses, setShowBusses] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    console.log('effect');\n    studentService\n      .getAll()\n      .then(initialStudents => {\n        setStudents(initialStudents);\n      })\n      .catch(error => \n        console.log(error));\n  }, []);\n\n  console.log('render', students.length, 'students')\n\n  const addStudent = (event) => {\n    event.preventDefault();\n    const studentObject = {\n      name: newStudent,\n      transport: Math.random() < 0.5? 'Car': 'Bus'\n    };\n    studentService\n      .create(studentObject)\n      .then(returnedStudent => {\n        setStudents(students.concat(returnedStudent));\n        setNewStudent('');\n        setSuccessMessage(\n          `Student '${returnedStudent.name}' was added`\n        );\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 4000);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  \n  const handleStudentChange = (event) => {\n    setNewStudent(event.target.value);\n  };\n\n  const toggleTransportType = id => {\n    const student = students.find(s => s.id === id);\n    const changedStudent = \n      { ...student, \n        transport: student.transport === 'Car'? 'Bus': 'Car'\n      };\n      console.log(\"changed student \" , changedStudent)\n    studentService\n      .update(id, changedStudent)\n      .then(returnedStudent => {\n        setStudents(students.map(student => student.id !== id ? student: returnedStudent));\n      })\n      .catch(error => {\n        console.log(error);\n        alert(`The student '${student.name}' was already deleted from the server`);\n\n        setStudents(students.filter(s => s.id !==id));\n      });\n  };\n\n  const studentsToShow = !showCars && !showBusses \n    ? students\n      : !showCars\n        ?  students.filter(student => student.transport ==='Bus')\n          :students.filter(student => student.transport ==='Car');\n  return (\n    <div>\n      <h1>Students</h1>\n      <Notification message={successMessage} />\n      <div>\n        <button onClick={() => { setShowCars(true); setShowBusses(false);}}>\n          Show Cars \n        </button>\n        <button onClick={() => { setShowBusses(true); setShowCars(false); }}>\n          Show Busses\n        </button>\n        <button onClick={() => {setShowBusses(false); setShowCars(false); }}>\n          Show All\n        </button>\n      </div>\n      <ul>\n        {studentsToShow.map(student => \n          <Student \n            key={student.id} \n            student={student} \n            toggleTransport={() => toggleTransportType(student.id)} \n          />\n        )}\n      </ul>\n      <form onSubmit={addStudent}>\n        <input value ={newStudent} onChange={handleStudentChange}/>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}