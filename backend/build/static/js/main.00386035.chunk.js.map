{"version":3,"sources":["components/Student.js","services/students.js","services/login.js","components/SuccessNotification.js","components/ErrorNotification.js","components/LoginForm.js","components/Togglable.js","components/StudentForm.js","App.js","index.js"],"names":["Student","student","toggleTransport","transportType","transport","className","name","onClick","baseUrl","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","id","put","newToken","login","credentials","a","console","log","SuccessNotification","message","ErrorNotification","LoginForm","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","value","onChange","target","type","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","StudentForm","createStudent","newStudentName","setNewStudentName","newStudentTransport","setNewStudentTransport","placeholder","App","students","setStudents","showCars","setShowCars","showBusses","setShowBusses","successMessage","setSuccessMessage","errorMessage","setErrorMessage","user","setUser","studentFormRef","useRef","useEffect","studentService","initialStudents","catch","error","loggedInUser","window","localStorage","getItem","JSON","parse","addStudent","studentObject","current","returnedStudent","concat","setTimeout","handleLogin","userObject","loginService","setItem","stringify","studentsToShow","filter","map","find","s","changedStudent","alert","toggleTransportType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00386035.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Student = ({ student, toggleTransport }) => {\r\n\tconst transportType = student.transport === 'Car'? 'Change to Bus': 'Change to Car';\r\n\treturn (\r\n\t\t<li className='student'>\r\n\t\t\t<p>\r\n                Name: {student.name} <br/>\r\n                Transport Type: {student.transport}\r\n\t\t\t\t<button onClick={toggleTransport}>{transportType}</button>\r\n\t\t\t</p>\r\n\t\t</li>\r\n\r\n\t);\r\n};\r\n\r\nexport default Student;","import axios from 'axios';\r\nconst baseUrl = '/api/students';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n\ttoken = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n\treturn axios.get(baseUrl).then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t};\r\n\treturn axios.post(baseUrl, newObject, config).then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\treturn axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data);\r\n};\r\n\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n\tsetToken\r\n};","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async credentials => {\r\n\tconsole.log('login credentials', credentials);\r\n\tconst response = await axios.post(baseUrl, credentials);\r\n\treturn response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React from 'react';\r\nconst SuccessNotification = ({ message }) => {\r\n\tif(message === null) return null;\r\n\r\n\treturn (\r\n\t\t<div className=\"success\">\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SuccessNotification;","import React from 'react';\r\nconst ErrorNotification = ({ message }) => {\r\n\tif(message === null) return null;\r\n\r\n\treturn (\r\n\t\t<div className=\"error\">\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ErrorNotification;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginForm = ({ login }) => {\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst handlePasswordChange = event => {\r\n\t\tsetPassword(event.target.value);\r\n\t};\r\n\r\n\tconst handleUsernameChange = event => {\r\n\t\tsetUsername(event.target.value);\r\n\t};\r\n\tconst handleLogin = event => {\r\n\t\tevent.preventDefault();\r\n\t\tlogin({\r\n\t\t\tusername:username,\r\n\t\t\tpassword: password\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Login</h2>\r\n\r\n\t\t\t<form onSubmit={handleLogin}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tusername\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tpassword\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\">Login</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\nLoginForm.propTypes = {\r\n\tlogin: PropTypes.func.isRequired\r\n};\r\nexport default LoginForm;","import React, { useState, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst hideWhenVisible = { display: visible ? 'none' : '' };\r\n\tconst showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n\tconst toggleVisibility = () => {\r\n\t\tsetVisible(!visible);\r\n\t};\r\n\tuseImperativeHandle(ref, () => {\r\n\t\treturn {\r\n\t\t\ttoggleVisibility\r\n\t\t};\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={hideWhenVisible}>\r\n\t\t\t\t<button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n\t\t\t</div>\r\n\t\t\t<div style={showWhenVisible}>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<button onClick={toggleVisibility}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nTogglable.propTypes ={\r\n\tbuttonLabel: PropTypes.string.isRequired\r\n};\r\n\r\nTogglable.displayName = 'Togglable';\r\nexport default Togglable;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StudentForm = ({ createStudent }) => {\r\n\tconst [newStudentName, setNewStudentName] = useState('');\r\n\tconst [newStudentTransport, setNewStudentTransport] = useState('');\r\n\r\n\tconst handleNameChange = event => {\r\n\t\tsetNewStudentName(event.target.value);\r\n\t};\r\n\r\n\tconst handleTransportChange = event => {\r\n\t\tsetNewStudentTransport(event.target.value);\r\n\t};\r\n\r\n\tconst addStudent = event => {\r\n\t\tevent.preventDefault();\r\n\t\tcreateStudent({\r\n\t\t\tname: newStudentName,\r\n\t\t\ttransport: newStudentTransport\r\n\t\t});\r\n\t\tsetNewStudentTransport('');\r\n\t\tsetNewStudentName('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Create a new Student</h2>\r\n\t\t\t<form onSubmit={addStudent}>\r\n\t\t\tAdd New Student:\r\n\t\t\t\t<input value ={newStudentName} onChange={handleNameChange} placeholder=\"Student Name\"/>\r\n\t\t\t\t<input value ={newStudentTransport} onChange={handleTransportChange} placeholder=\"Car/Bus\"/>\r\n\t\t\t\t<button type=\"submit\">Save</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n};\r\n\r\nStudentForm.propTypes = {\r\n\tcreateStudent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default StudentForm;\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Student from './components/Student';\r\nimport studentService from './services/students';\r\nimport loginService from './services/login';\r\nimport SuccessNotification from './components/SuccessNotification';\r\nimport ErrorNotification from './components/ErrorNotification';\r\nimport LoginForm from './components/LoginForm';\r\nimport Togglable from './components/Togglable';\r\nimport StudentForm from './components/StudentForm';\r\n\r\nconst App = () => {\r\n\tconst [students,setStudents] = useState([]);\r\n\tconst [showCars, setShowCars] = useState(false);\r\n\tconst [showBusses, setShowBusses] = useState(false);\r\n\tconst [successMessage, setSuccessMessage] = useState(null);\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [user, setUser] = useState(null);\r\n\tconst studentFormRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('effect');\r\n\t\tstudentService\r\n\t\t\t.getAll()\r\n\t\t\t.then(initialStudents => {\r\n\t\t\t\tsetStudents(initialStudents);\r\n\t\t\t})\r\n\t\t\t.catch(error =>\r\n\t\t\t\tconsole.log(error));\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loggedInUser = window.localStorage.getItem('loggedInUser');\r\n\t\tif (loggedInUser) {\r\n\t\t\tconst user = JSON.parse(loggedInUser);\r\n\t\t\tsetUser(user);\r\n\t\t\tstudentService.setToken(user.token);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst addStudent = (studentObject) => {\r\n\t\tstudentFormRef.current.toggleVisibility();\r\n\t\tstudentService\r\n\t\t\t.create(studentObject)\r\n\t\t\t.then(returnedStudent => {\r\n\t\t\t\tsetStudents(students.concat(returnedStudent));\r\n\t\t\t\tsetSuccessMessage(\r\n\t\t\t\t\t`Student '${returnedStudent.name}' was added`\r\n\t\t\t\t);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetSuccessMessage(null);\r\n\t\t\t\t}, 4000);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleLogin = async userObject => {\r\n\t\ttry{\r\n\t\t\tconst user = await loginService.login(\r\n\t\t\t\tuserObject\r\n\t\t\t);\r\n\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t'loggedInUser', JSON.stringify(user)\r\n\t\t\t);\r\n\t\t\tstudentService.setToken(user.token);\r\n\t\t\tsetUser(user);\r\n\t\t}catch (exception) {\r\n\t\t\tsetErrorMessage('Wrong Credentials');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetErrorMessage(null);\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleTransportType = id => {\r\n\t\tconst student = students.find(s => s.id === id);\r\n\t\tconst changedStudent = { ...student, transport: student.transport === 'Car'? 'Bus': 'Car' };\r\n\t\tconsole.log('changed student ' , changedStudent);\r\n\t\tstudentService\r\n\t\t\t.update(id, changedStudent)\r\n\t\t\t.then(returnedStudent => {\r\n\t\t\t\tsetStudents(students.map(student => student.id !== id ? student: returnedStudent));\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\talert(`The student '${student.name}' was already deleted from the server`);\r\n\r\n\t\t\t\tsetStudents(students.filter(s => s.id !==id));\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst studentsToShow = !showCars && !showBusses\r\n\t\t? students\r\n\t\t: !showCars\r\n\t\t\t?  students.filter(student => student.transport ==='Bus')\r\n\t\t\t:students.filter(student => student.transport ==='Car');\r\n\r\n\r\n\tconst loginForm = () => (\r\n\t\t<Togglable buttonLabel=\"Login\">\r\n\t\t\t<LoginForm login={handleLogin} />\r\n\t\t</Togglable>\r\n\r\n\t);\r\n\r\n\tconst studentForm = () => (\r\n\t\t<Togglable buttonLabel=\"new student\" ref={studentFormRef}>\r\n\t\t\t<StudentForm createStudent={addStudent}  />\r\n\t\t</Togglable>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Students</h1>\r\n\t\t\t<SuccessNotification message={successMessage} />\r\n\t\t\t<ErrorNotification message={errorMessage} />\r\n\t\t\t{user === null ?\r\n\t\t\t\tloginForm():\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{user.name} logged-in</p>\r\n\t\t\t\t\t{studentForm()}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => { setShowCars(true); setShowBusses(false);}}>\r\n          Show Cars\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={() => { setShowBusses(true); setShowCars(false); }}>\r\n          Show Busses\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={() => {setShowBusses(false); setShowCars(false); }}>\r\n          Show All\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t{studentsToShow.map(student =>\r\n\t\t\t\t\t<Student\r\n\t\t\t\t\t\tkey={student.id}\r\n\t\t\t\t\t\tstudent={student}\r\n\t\t\t\t\t\ttoggleTransport={() => toggleTransportType(student.id)}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}